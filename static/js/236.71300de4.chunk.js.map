{"version":3,"file":"static/js/236.71300de4.chunk.js","mappings":"wTAMaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAA6BC,EAAAA,EAAAA,KAArBC,EAASF,EAATE,UAAWC,EAAKH,EAALG,MACbC,GAAQC,EAAAA,EAAAA,KAERC,GAAYC,EAAAA,EAAAA,SAAO,IAEzBC,EAAAA,EAAAA,YAAU,WACJF,EAAUG,SAAWN,GACrBC,EAAM,CACJM,MAAO,qBACPC,YAAa,oCACbC,OAAQ,QACRC,SAAU,IACVC,YAAY,GAGnB,GAAG,CAACX,EAAOC,KAEZI,EAAAA,EAAAA,YAAU,WACRF,EAAUG,SAAU,CACtB,GAAG,IAkBH,OACEM,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,EAAE,IAAIC,QAAQ,SAAQC,SAAA,EAC1BJ,EAAAA,EAAAA,MAAA,QAAMK,SAhBW,SAAAC,GACnBA,EAAEC,iBACD,IAAMC,EAAOF,EAAEG,OAChBC,QAAQC,IAAIL,EAAEG,OAAOG,SAASC,KAAKC,OACnC/B,GACEgC,EAAAA,EAAAA,IAAS,CACPF,KAAMP,EAAEG,OAAOG,SAASC,KAAKC,MAC7BE,MAAOV,EAAEG,OAAOG,SAASI,MAAMF,MAC/BG,SAAUX,EAAEG,OAAOG,SAASK,SAASH,SAGzCN,EAAKU,OACP,EAIiCd,SAAA,EAC3BJ,EAAAA,EAAAA,MAACmB,EAAAA,GAAW,CAACC,GAAG,IAAGhB,SAAA,EACjBiB,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAAAlB,SAAC,UACTiB,EAAAA,EAAAA,KAACE,EAAAA,EAAK,CAACC,YAAY,OAAOC,KAAK,OAAOZ,KAAK,aAE/Cb,EAAAA,EAAAA,MAACmB,EAAAA,GAAW,CAACC,GAAG,IAAGhB,SAAA,EACjBiB,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAAAlB,SAAC,WACXiB,EAAAA,EAAAA,KAACE,EAAAA,EAAK,CAACC,YAAY,QAAQC,KAAK,QAAQZ,KAAK,cAE/CQ,EAAAA,EAAAA,KAACF,EAAAA,GAAW,CAACC,GAAG,OAChBpB,EAAAA,EAAAA,MAACmB,EAAAA,GAAW,CAACC,GAAG,IAAGhB,SAAA,EACjBiB,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAAAlB,SAAC,cACXiB,EAAAA,EAAAA,KAACE,EAAAA,EAAK,CAACC,YAAY,WAAWC,KAAK,WAAWZ,KAAK,iBAErDQ,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CAACD,KAAK,SAAQrB,SAAC,gBAEvBjB,IAAakC,EAAAA,EAAAA,KAACM,EAAAA,EAAO,MAG5B,EC/De,SAASC,IACtB,OACE5B,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACEiB,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAAAzB,UACLiB,EAAAA,EAAAA,KAAA,SAAAjB,SAAO,oBAETiB,EAAAA,EAAAA,KAACvC,EAAY,MAGnB,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/auth-operations';\nimport { useAuth } from '../../hooks/useAuth';\nimport { Button, Input, Flex, FormLabel, FormControl, useToast, Spinner } from '@chakra-ui/react'\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const { isLoading, error } = useAuth();\n  const toast = useToast()\n\n  const isMounted = useRef(false);\n\n  useEffect(() => {\n    if (isMounted.current && error) {\n        toast({\n          title: 'Registration error',\n          description: \"Maybe such a user already exists.\",\n          status: 'error',\n          duration: 4000,\n          isClosable: true,\n        })\n      }\n   }, [error, toast])\n\n  useEffect(() => {\n    isMounted.current = true\n  }, [])\n\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n     const form = e.target;\n    console.log(e.target.elements.name.value);\n    dispatch(\n      register({\n        name: e.target.elements.name.value,\n        email: e.target.elements.email.value,\n        password: e.target.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Flex p='8' justify='center'>\n      <form onSubmit={handleSubmit}>\n        <FormControl pb='3'>\n          <FormLabel>Name</FormLabel>\n            <Input placeholder='Name' type=\"text\" name=\"name\" />\n        </FormControl>\n        <FormControl pb='3'>\n          <FormLabel>Email</FormLabel>\n          <Input placeholder='Email' type=\"email\" name=\"email\" />\n        </FormControl>\n        <FormControl pb='3'></FormControl>\n        <FormControl pb='3'>\n          <FormLabel>Password</FormLabel>\n          <Input placeholder='Password' type=\"password\" name=\"password\" />\n        </FormControl>\n        <Button type=\"submit\">Register</Button>\n      </form>\n      {isLoading && <Spinner />}\n    </Flex>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register () {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["RegisterForm","dispatch","useDispatch","_useAuth","useAuth","isLoading","error","toast","useToast","isMounted","useRef","useEffect","current","title","description","status","duration","isClosable","_jsxs","Flex","p","justify","children","onSubmit","e","preventDefault","form","target","console","log","elements","name","value","register","email","password","reset","FormControl","pb","_jsx","FormLabel","Input","placeholder","type","Button","Spinner","Register","Helmet"],"sourceRoot":""}